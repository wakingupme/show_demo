


Gadgets
=======


0x00000000004010ac: adc dword ptr [rax], eax; call qword ptr [rip + 0x2f3b]; hlt; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x000000000040111e: adc dword ptr [rax], edi; test rax, rax; je 0x1130; mov edi, 0x404040; jmp rax; 
0x00000000004010b0: adc eax, 0x2f3b; hlt; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x00000000004010dc: adc edi, dword ptr [rax]; test rax, rax; je 0x10f0; mov edi, 0x404040; jmp rax; 
0x000000000040114c: adc edx, dword ptr [rbp + 0x48]; mov ebp, esp; call 0x10d0; mov byte ptr [rip + 0x2eeb], 1; pop rbp; ret; 
0x00000000004010b4: add ah, dh; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x00000000004010ae: add bh, bh; adc eax, 0x2f3b; hlt; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x000000000040100e: add byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x0000000000401208: add byte ptr [rax], al; add byte ptr [rax], al; call 0x1070; mov eax, 0; leave; ret; 
0x00000000004010bc: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; ret; 
0x0000000000401212: add byte ptr [rax], al; add byte ptr [rax], al; leave; ret; 
0x00000000004010de: add byte ptr [rax], al; add byte ptr [rax], al; test rax, rax; je 0x10f0; mov edi, 0x404040; jmp rax; 
0x0000000000401120: add byte ptr [rax], al; add byte ptr [rax], al; test rax, rax; je 0x1130; mov edi, 0x404040; jmp rax; 
0x0000000000401213: add byte ptr [rax], al; add cl, cl; ret; 
0x000000000040120a: add byte ptr [rax], al; call 0x1070; mov eax, 0; leave; ret; 
0x00000000004010be: add byte ptr [rax], al; endbr64; ret; 
0x00000000004010b3: add byte ptr [rax], al; hlt; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x0000000000401214: add byte ptr [rax], al; leave; ret; 
0x000000000040100d: add byte ptr [rax], al; test rax, rax; je 0x1016; call rax; 
0x000000000040100d: add byte ptr [rax], al; test rax, rax; je 0x1016; call rax; add rsp, 8; ret; 
0x00000000004010e0: add byte ptr [rax], al; test rax, rax; je 0x10f0; mov edi, 0x404040; jmp rax; 
0x0000000000401122: add byte ptr [rax], al; test rax, rax; je 0x1130; mov edi, 0x404040; jmp rax; 
0x000000000040115b: add byte ptr [rcx], al; pop rbp; ret; 
0x0000000000401215: add cl, cl; ret; 
0x00000000004010ad: add dil, dil; adc eax, 0x2f3b; hlt; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x000000000040100a: add eax, 0x2fe9; test rax, rax; je 0x1016; call rax; 
0x000000000040100a: add eax, 0x2fe9; test rax, rax; je 0x1016; call rax; add rsp, 8; ret; 
0x0000000000401017: add esp, 8; ret; 
0x0000000000401016: add rsp, 8; ret; 
0x000000000040120c: call 0x1070; mov eax, 0; leave; ret; 
0x0000000000401151: call 0x10d0; mov byte ptr [rip + 0x2eeb], 1; pop rbp; ret; 
0x00000000004010af: call qword ptr [rip + 0x2f3b]; hlt; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x0000000000401014: call rax; 
0x0000000000401014: call rax; add rsp, 8; ret; 
0x0000000000401179: cli; push rbp; mov rbp, rsp; pop rdi; ret; 
0x00000000004010c3: cli; ret; 
0x000000000040121b: cli; sub rsp, 8; add rsp, 8; ret; 
0x0000000000401003: cli; sub rsp, 8; mov rax, qword ptr [rip + 0x2fe9]; test rax, rax; je 0x1016; call rax; 
0x00000000004010b1: cmp ebp, dword ptr [rdi]; add byte ptr [rax], al; hlt; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x0000000000401176: endbr64; push rbp; mov rbp, rsp; pop rdi; ret; 
0x00000000004010c0: endbr64; ret; 
0x0000000000401218: endbr64; sub rsp, 8; add rsp, 8; ret; 
0x0000000000401000: endbr64; sub rsp, 8; mov rax, qword ptr [rip + 0x2fe9]; test rax, rax; je 0x1016; call rax; 
0x00000000004010b5: hlt; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x0000000000401006: in al, dx; or byte ptr [rax - 0x75], cl; add eax, 0x2fe9; test rax, rax; je 0x1016; call rax; 
0x000000000040117d: in eax, 0x5f; ret; 
0x0000000000401012: je 0x1016; call rax; 
0x0000000000401012: je 0x1016; call rax; add rsp, 8; ret; 
0x00000000004010db: je 0x10f0; mov eax, 0; test rax, rax; je 0x10f0; mov edi, 0x404040; jmp rax; 
0x00000000004010e5: je 0x10f0; mov edi, 0x404040; jmp rax; 
0x000000000040111d: je 0x1130; mov eax, 0; test rax, rax; je 0x1130; mov edi, 0x404040; jmp rax; 
0x0000000000401127: je 0x1130; mov edi, 0x404040; jmp rax; 
0x00000000004010ec: jmp rax; 
0x0000000000401216: leave; ret; 
0x0000000000401156: mov byte ptr [rip + 0x2eeb], 1; pop rbp; ret; 
0x0000000000401211: mov eax, 0; leave; ret; 
0x00000000004010dd: mov eax, 0; test rax, rax; je 0x10f0; mov edi, 0x404040; jmp rax; 
0x000000000040111f: mov eax, 0; test rax, rax; je 0x1130; mov edi, 0x404040; jmp rax; 
0x0000000000401009: mov eax, dword ptr [rip + 0x2fe9]; test rax, rax; je 0x1016; call rax; 
0x0000000000401009: mov eax, dword ptr [rip + 0x2fe9]; test rax, rax; je 0x1016; call rax; add rsp, 8; ret; 
0x000000000040114f: mov ebp, esp; call 0x10d0; mov byte ptr [rip + 0x2eeb], 1; pop rbp; ret; 
0x000000000040117c: mov ebp, esp; pop rdi; ret; 
0x0000000000401207: mov edi, 0; call 0x1070; mov eax, 0; leave; ret; 
0x00000000004010e7: mov edi, 0x404040; jmp rax; 
0x0000000000401205: mov esi, eax; mov edi, 0; call 0x1070; mov eax, 0; leave; ret; 
0x0000000000401008: mov rax, qword ptr [rip + 0x2fe9]; test rax, rax; je 0x1016; call rax; 
0x0000000000401008: mov rax, qword ptr [rip + 0x2fe9]; test rax, rax; je 0x1016; call rax; add rsp, 8; ret; 
0x000000000040114e: mov rbp, rsp; call 0x10d0; mov byte ptr [rip + 0x2eeb], 1; pop rbp; ret; 
0x000000000040117b: mov rbp, rsp; pop rdi; ret; 
0x0000000000401204: mov rsi, rax; mov edi, 0; call 0x1070; mov eax, 0; leave; ret; 
0x00000000004010b8: nop dword ptr [rax + rax]; endbr64; ret; 
0x00000000004010b7: nop dword ptr cs:[rax + rax]; endbr64; ret; 
0x00000000004010b6: nop word ptr cs:[rax + rax]; endbr64; ret; 
0x0000000000401180: nop; pop rbp; ret; 
0x00000000004010ef: nop; ret; 
0x0000000000401007: or byte ptr [rax - 0x75], cl; add eax, 0x2fe9; test rax, rax; je 0x1016; call rax; 
0x00000000004010e6: or dword ptr [rdi + 0x404040], edi; jmp rax; 
0x000000000040115d: pop rbp; ret; 
0x000000000040117e: pop rdi; ret; 
0x000000000040114d: push rbp; mov rbp, rsp; call 0x10d0; mov byte ptr [rip + 0x2eeb], 1; pop rbp; ret; 
0x000000000040117a: push rbp; mov rbp, rsp; pop rdi; ret; 
0x000000000040101a: ret; 
0x0000000000401011: sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x000000000040121d: sub esp, 8; add rsp, 8; ret; 
0x0000000000401005: sub esp, 8; mov rax, qword ptr [rip + 0x2fe9]; test rax, rax; je 0x1016; call rax; 
0x000000000040121c: sub rsp, 8; add rsp, 8; ret; 
0x0000000000401004: sub rsp, 8; mov rax, qword ptr [rip + 0x2fe9]; test rax, rax; je 0x1016; call rax; 
0x00000000004010ba: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; endbr64; ret; 
0x0000000000401010: test eax, eax; je 0x1016; call rax; 
0x0000000000401010: test eax, eax; je 0x1016; call rax; add rsp, 8; ret; 
0x00000000004010e3: test eax, eax; je 0x10f0; mov edi, 0x404040; jmp rax; 
0x0000000000401125: test eax, eax; je 0x1130; mov edi, 0x404040; jmp rax; 
0x000000000040100f: test rax, rax; je 0x1016; call rax; 
0x000000000040100f: test rax, rax; je 0x1016; call rax; add rsp, 8; ret; 
0x00000000004010e2: test rax, rax; je 0x10f0; mov edi, 0x404040; jmp rax; 
0x0000000000401124: test rax, rax; je 0x1130; mov edi, 0x404040; jmp rax; 

96 gadgets found
